log_format rt_cache '$remote_addr - $upstream_cache_status [$time_local]  '
'"$request" $status $body_bytes_sent '
'"$http_referer" "$http_user_agent" "$http_range"';

log_format ranger_cache '$remote_addr - $ranger_cache_status [$time_local]  '
'"$request" $status $body_bytes_sent '
'"$http_referer" "$http_user_agent" "$http_range"';

proxy_cache_path  /dev/shm/nginx/ levels=1:2 keys_zone=default:100m inactive=24h  max_size=100m;

map $request_method $disable_cache {
  HEAD	1;
  default	0;
}

lua_package_path "external/lua-resty-http/lib/?.lua;external/nginx_log_by_lua/?.lua;external/bitset/lib/?.lua;;";

lua_shared_dict file_dict  5M;
lua_shared_dict log_dict   1M;
lua_shared_dict cache_dict 1M;
lua_shared_dict chunk_dict 10M;

init_by_lua_file 'ranger/init.lua';

# Server that has the lua code and will be accessed by clients
server {
  listen       80 default;
  server_name  _;
  server_name_in_redirect off;

  set $ranger_cache_status $upstream_cache_status;

  access_log /var/log/nginx/access-default.log;
  access_log /var/log/nginx/ranger-default.log ranger_cache;

  index index.html index.htm;
  root /var/www;

  lua_check_client_abort on;
  lua_code_cache on;

  resolver 4.2.2.2;
  server_tokens off;
  resolver_timeout 1s;

  location / {
    try_files $uri $uri/ index.html;
  }

  # files that will be handled by ranger
  location ~ [^/]\.dat(/|$) {
    lua_http10_buffering off;
    content_by_lua_file 'ranger/content.lua';
    log_by_lua_file 'ranger/log.lua';
  }

  location = /stats/data {
    content_by_lua_file 'ranger/stats/content.lua';
  }


}

# Server that works as a backend to the lua code
server {
  listen 8080;

  access_log   /var/log/nginx/cache.log rt_cache;

  resolver 4.2.2.2;
  server_tokens off;
  resolver_timeout 1s;

  location / {
    proxy_no_cache $disable_cache;
    proxy_cache_valid 200 24h;
    proxy_cache_valid 206 24h;
    proxy_cache_key "$scheme$proxy_host$request_uri$http_range";
    proxy_set_header Range $http_range;
    proxy_set_header If-Range $http_if_range;
    proxy_set_header If-None-Match "";
    proxy_set_header If-Modified-Since "";
    add_header X-Cache $upstream_cache_status;
    proxy_ignore_headers Expires;
    proxy_ignore_headers Cache-Control;
    proxy_cache_use_stale error timeout http_502;
    proxy_cache default;
    proxy_cache_min_uses 1;
    proxy_set_header Host backend-hostname;
    proxy_pass http://backend.host.com:8080/;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
  }
}
